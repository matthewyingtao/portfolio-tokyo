---
import { Font } from "astro:assets";
import { ClientRouter } from "astro:transitions";
import { SITE_TITLE } from "../consts";
import "../global.css";

interface Props {
  title: string;
  description: string;
  image?: string;
  pubDate?: Date;
  updatedDate?: Date;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const {
  title,
  description,
  image = "/social.jpg",
  pubDate,
  updatedDate,
} = Astro.props;
---

<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/png" href="/favicon.png" />
<link rel="sitemap" href="/sitemap-index.xml" />
<link
  rel="alternate"
  type="application/rss+xml"
  title={SITE_TITLE}
  href={new URL("rss.xml", Astro.site)}
/>
<meta name="generator" content={Astro.generator} />

<Font cssVariable="--font-ppmori" preload />

<link rel="canonical" href={canonicalURL} />

<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(image, Astro.url)} />

<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={new URL(image, Astro.url)} />

{
  pubDate && (
    <meta property="article:published_time" content={pubDate.toISOString()} />
  )
}
{
  updatedDate && (
    <meta
      property="article:modified_time"
      content={updatedDate.toISOString()}
    />
  )
}

<ClientRouter />
