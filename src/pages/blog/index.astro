---
import { getCollection, render } from "astro:content";
import BaseHead from "../../components/BaseHead.astro";
import ExpandedContact from "../../components/ExpandedContact.astro";
import FibbonaciHeading from "../../components/FibbonaciHeading.astro";
import FormattedDate from "../../components/FormattedDate.astro";
import Header from "../../components/Header.astro";

const posts = await Promise.all(
  (await getCollection("blog"))
    .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
    .map(async (post) => {
      const { remarkPluginFrontmatter } = await render(post);
      return {
        id: post.id,
        data: {
          ...post.data,
          wordCount: remarkPluginFrontmatter.wordCount,
          minutesRead: remarkPluginFrontmatter.minutesRead,
        },
      };
    }),
);
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead
      title={"Blog Posts"}
      description="Matthew Tao's blog, a collection of in progress writings on anything that interest me."
    />
  </head>
  <body class="mx-gutter overflow-x-hidden">
    <div class="noise"></div>

    <Header />
    <main
      class="mb-20 flex flex-wrap justify-center gap-12 md:flex-nowrap md:justify-start xl:gap-24"
    >
      <FibbonaciHeading title="Latest blog posts" />
      <section class="text-b-gray mt-2 w-[42ch]">
        <h1
          class="text-b-willow-dark mb-8 underline underline-offset-2 lg:sr-only"
        >
          Latest blog posts
        </h1>
        <ul class="flex flex-col gap-16">
          {
            posts.map((post) => (
              <li class="flex flex-col">
                <a
                  class="text-b-willow-dark mb-1"
                  href={`/blog/post/${post.id}`}
                >
                  {post.data.title}
                </a>
                <p class="mb-4">{post.data.description}</p>

                <div class="text-b-minato flex items-center justify-between text-base">
                  <span>
                    <FormattedDate date={post.data.pubDate} /> ·{" "}
                    {post.data.wordCount} words · {post.data.minutesRead} min
                    read
                  </span>

                  <a href={`/blog/post/${post.id}`} class="underline">
                    read more
                  </a>
                </div>
              </li>
            ))
          }
        </ul>
      </section>
      <ExpandedContact />
    </main>
  </body>
</html>
