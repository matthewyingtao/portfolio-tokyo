---
import { countWords } from "alfaaz";
import matter from "gray-matter";
import { readFile } from "node:fs/promises";
import { basename } from "node:path";
import slugify from "slugify";
import FormattedDate from "../../components/FormattedDate.astro";
import BaseHead from "../../components/layout/BaseHead.astro";
import ExpandedContact from "../../components/layout/ExpandedContact.astro";
import Header from "../../components/layout/Header.astro";
import Scribbles from "../../components/layout/Scribbles.astro";
import { SITE_DESCRIPTION, siteTitle } from "../../consts";

let postsGlob = (await Astro.glob("./post/*.md")).map(async (p) => {
  const post1 = await readFile(p.file);

  const { content } = matter(post1);

  return {
    ...p,
    length: countWords(content),
    slug: slugify(basename(p.file, ".md")),
  };
});

let resolvedPosts = await Promise.all(postsGlob);

resolvedPosts = resolvedPosts.sort(
  (a, b) =>
    new Date(b.frontmatter.pubDate).valueOf() -
    new Date(a.frontmatter.pubDate).valueOf(),
);
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <BaseHead title={siteTitle("Blog")} description={SITE_DESCRIPTION} />
  </head>
  <body class="mx-gutter overflow-x-hidden">
    <div class="noise"></div>
    <Scribbles />
    <Header />
    <main class="grid grid-cols-[repeat(3,auto)] gap-24 justify-start">
      <aside class="whitespace-nowrap relative mt-2">
        <img
          src="/dotssmall.svg"
          alt=""
          class="absolute -z-10 left-0 top-0 -bottom-2 -translate-x-12"
        />
        {
          Array.from({ length: 8 }).map((_, i) => {
            const offset = 4 * 1.5 ** i;

            // translate-y-1 is to line-up with line-height: 0
            return (
              <span
                class="block leading-[0] translate-y-1"
                style={{
                  marginTop: offset + "px",
                }}
              >
                Latest blog posts
              </span>
            );
          })
        }
      </aside>
      <section class="w-[42ch] text-b-gray mb-20 mt-2">
        <div class="flex gap-5 mb-11">
          <button
            class="px-6 py-2 leading-[0.95] rounded-md text-b-willow-dark border-b-willow-dark border"
            >Tutorials</button
          >
          <button
            class="px-6 py-2 leading-[0.95] rounded-md text-b-willow-dark border-b-willow-dark border"
            >Thoughts</button
          >
        </div>
        <ul class="flex flex-col gap-16">
          {
            resolvedPosts.map((post) => (
              <li class="flex flex-col">
                <a
                  class="text-b-willow-dark mb-1"
                  href={`/blog/post/${post.slug}`}
                >
                  {post.frontmatter.title}
                </a>
                <p class="mb-4">{post.frontmatter.description}</p>

                <div class="flex justify-between items-center text-base text-b-minato">
                  <span>
                    <FormattedDate dateString={post.frontmatter.pubDate} /> ·{" "}
                    {post.length} words · {Math.ceil(post.length / 200)} min
                    read
                  </span>

                  <a href={`/blog/post/${post.slug}`} class="underline">
                    read more
                  </a>
                </div>
              </li>
            ))
          }
        </ul>
      </section>
      <ExpandedContact />
    </main>
  </body>
</html>
