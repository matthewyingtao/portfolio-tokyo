---
import { countWords } from "alfaaz";
import matter from "gray-matter";
import { readFile } from "node:fs/promises";
import { basename } from "node:path";
import slugify from "slugify";
import FormattedDate from "../../components/FormattedDate.astro";
import BaseHead from "../../components/layout/BaseHead.astro";
import ExpandedContact from "../../components/layout/ExpandedContact.astro";
import FibbonaciHeading from "../../components/layout/FibbonaciHeading.astro";
import Header from "../../components/layout/Header.astro";

let postsGlob = (await Astro.glob("./post/*.md")).map(async (p) => {
  const post = await readFile(p.file);

  const { content } = matter(post);

  return {
    ...p,
    length: countWords(content),
    // file name becomes the slug
    slug: slugify(basename(p.file, ".md")),
  };
});

let resolvedPosts = await Promise.all(postsGlob);

resolvedPosts = resolvedPosts.sort(
  (a, b) =>
    new Date(b.frontmatter.pubDate).valueOf() -
    new Date(a.frontmatter.pubDate).valueOf(),
);
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <BaseHead
      title={"Blog Posts"}
      description="Matthew Tao's blog, a collection of in progress writings on anything that interest me."
    />
  </head>
  <body class="mx-gutter overflow-x-hidden">
    <div class="noise"></div>

    <Header />
    <main
      class="flex gap-12 xl:gap-24 flex-wrap md:flex-nowrap justify-center md:justify-start mb-20"
    >
      <FibbonaciHeading title="Latest blog posts" />
      <section class="w-[42ch] text-b-gray mt-2">
        <h1
          class="text-b-willow-dark mb-8 lg:sr-only underline underline-offset-2"
        >
          Latest blog posts
        </h1>
        <ul class="flex flex-col gap-16">
          {
            resolvedPosts.map((post) => (
              <li class="flex flex-col">
                <a
                  class="text-b-willow-dark mb-1"
                  href={`/blog/post/${post.slug}`}
                >
                  {post.frontmatter.title}
                </a>
                <p class="mb-4">{post.frontmatter.description}</p>

                <div class="flex justify-between items-center text-base text-b-minato">
                  <span>
                    <FormattedDate dateString={post.frontmatter.pubDate} /> ·{" "}
                    {post.length} words · {Math.ceil(post.length / 200)} min
                    read
                  </span>

                  <a href={`/blog/post/${post.slug}`} class="underline">
                    read more
                  </a>
                </div>
              </li>
            ))
          }
        </ul>
      </section>
      <ExpandedContact />
    </main>
  </body>
</html>
